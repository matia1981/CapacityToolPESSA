//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.8.3928.0.
// 
namespace PavilionKyrpton.ExcelLoaders {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("NewDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NewDataSet : global::System.Data.DataSet {
        
        private eurorunner_tradesDataTable tableeurorunner_trades;
        
        private fixed_tradeDataTable tablefixed_trade;
        
        private periodDataTable tableperiod;
        
        private fixed_trade_deleteDataTable tablefixed_trade_delete;
        
        private capacity_tradeDataTable tablecapacity_trade;
        
        private capacity_trade_deleteDataTable tablecapacity_trade_delete;
        
        private swing_nominationDataTable tableswing_nomination;
        
        private global::System.Data.DataRelation relationeurorunner_trades_fixed_trade;
        
        private global::System.Data.DataRelation relationfixed_trade_period;
        
        private global::System.Data.DataRelation relationeurorunner_trades_fixed_trade_delete;
        
        private global::System.Data.DataRelation relationeurorunner_trades_capacity_trade;
        
        private global::System.Data.DataRelation relationeurorunner_trades_capacity_trade_delete;
        
        private global::System.Data.DataRelation relationeurorunner_trades_swing_nomination;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NewDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected NewDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["eurorunner_trades"] != null)) {
                    base.Tables.Add(new eurorunner_tradesDataTable(ds.Tables["eurorunner_trades"]));
                }
                if ((ds.Tables["fixed_trade"] != null)) {
                    base.Tables.Add(new fixed_tradeDataTable(ds.Tables["fixed_trade"]));
                }
                if ((ds.Tables["period"] != null)) {
                    base.Tables.Add(new periodDataTable(ds.Tables["period"]));
                }
                if ((ds.Tables["fixed_trade_delete"] != null)) {
                    base.Tables.Add(new fixed_trade_deleteDataTable(ds.Tables["fixed_trade_delete"]));
                }
                if ((ds.Tables["capacity_trade"] != null)) {
                    base.Tables.Add(new capacity_tradeDataTable(ds.Tables["capacity_trade"]));
                }
                if ((ds.Tables["capacity_trade_delete"] != null)) {
                    base.Tables.Add(new capacity_trade_deleteDataTable(ds.Tables["capacity_trade_delete"]));
                }
                if ((ds.Tables["swing_nomination"] != null)) {
                    base.Tables.Add(new swing_nominationDataTable(ds.Tables["swing_nomination"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public eurorunner_tradesDataTable eurorunner_trades {
            get {
                return this.tableeurorunner_trades;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public fixed_tradeDataTable fixed_trade {
            get {
                return this.tablefixed_trade;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public periodDataTable period {
            get {
                return this.tableperiod;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public fixed_trade_deleteDataTable fixed_trade_delete {
            get {
                return this.tablefixed_trade_delete;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public capacity_tradeDataTable capacity_trade {
            get {
                return this.tablecapacity_trade;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public capacity_trade_deleteDataTable capacity_trade_delete {
            get {
                return this.tablecapacity_trade_delete;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public swing_nominationDataTable swing_nomination {
            get {
                return this.tableswing_nomination;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            NewDataSet cln = ((NewDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["eurorunner_trades"] != null)) {
                    base.Tables.Add(new eurorunner_tradesDataTable(ds.Tables["eurorunner_trades"]));
                }
                if ((ds.Tables["fixed_trade"] != null)) {
                    base.Tables.Add(new fixed_tradeDataTable(ds.Tables["fixed_trade"]));
                }
                if ((ds.Tables["period"] != null)) {
                    base.Tables.Add(new periodDataTable(ds.Tables["period"]));
                }
                if ((ds.Tables["fixed_trade_delete"] != null)) {
                    base.Tables.Add(new fixed_trade_deleteDataTable(ds.Tables["fixed_trade_delete"]));
                }
                if ((ds.Tables["capacity_trade"] != null)) {
                    base.Tables.Add(new capacity_tradeDataTable(ds.Tables["capacity_trade"]));
                }
                if ((ds.Tables["capacity_trade_delete"] != null)) {
                    base.Tables.Add(new capacity_trade_deleteDataTable(ds.Tables["capacity_trade_delete"]));
                }
                if ((ds.Tables["swing_nomination"] != null)) {
                    base.Tables.Add(new swing_nominationDataTable(ds.Tables["swing_nomination"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableeurorunner_trades = ((eurorunner_tradesDataTable)(base.Tables["eurorunner_trades"]));
            if ((initTable == true)) {
                if ((this.tableeurorunner_trades != null)) {
                    this.tableeurorunner_trades.InitVars();
                }
            }
            this.tablefixed_trade = ((fixed_tradeDataTable)(base.Tables["fixed_trade"]));
            if ((initTable == true)) {
                if ((this.tablefixed_trade != null)) {
                    this.tablefixed_trade.InitVars();
                }
            }
            this.tableperiod = ((periodDataTable)(base.Tables["period"]));
            if ((initTable == true)) {
                if ((this.tableperiod != null)) {
                    this.tableperiod.InitVars();
                }
            }
            this.tablefixed_trade_delete = ((fixed_trade_deleteDataTable)(base.Tables["fixed_trade_delete"]));
            if ((initTable == true)) {
                if ((this.tablefixed_trade_delete != null)) {
                    this.tablefixed_trade_delete.InitVars();
                }
            }
            this.tablecapacity_trade = ((capacity_tradeDataTable)(base.Tables["capacity_trade"]));
            if ((initTable == true)) {
                if ((this.tablecapacity_trade != null)) {
                    this.tablecapacity_trade.InitVars();
                }
            }
            this.tablecapacity_trade_delete = ((capacity_trade_deleteDataTable)(base.Tables["capacity_trade_delete"]));
            if ((initTable == true)) {
                if ((this.tablecapacity_trade_delete != null)) {
                    this.tablecapacity_trade_delete.InitVars();
                }
            }
            this.tableswing_nomination = ((swing_nominationDataTable)(base.Tables["swing_nomination"]));
            if ((initTable == true)) {
                if ((this.tableswing_nomination != null)) {
                    this.tableswing_nomination.InitVars();
                }
            }
            this.relationeurorunner_trades_fixed_trade = this.Relations["eurorunner_trades_fixed_trade"];
            this.relationfixed_trade_period = this.Relations["fixed_trade_period"];
            this.relationeurorunner_trades_fixed_trade_delete = this.Relations["eurorunner_trades_fixed_trade_delete"];
            this.relationeurorunner_trades_capacity_trade = this.Relations["eurorunner_trades_capacity_trade"];
            this.relationeurorunner_trades_capacity_trade_delete = this.Relations["eurorunner_trades_capacity_trade_delete"];
            this.relationeurorunner_trades_swing_nomination = this.Relations["eurorunner_trades_swing_nomination"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "NewDataSet";
            this.Prefix = "";
            this.Locale = new global::System.Globalization.CultureInfo("");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableeurorunner_trades = new eurorunner_tradesDataTable();
            base.Tables.Add(this.tableeurorunner_trades);
            this.tablefixed_trade = new fixed_tradeDataTable();
            base.Tables.Add(this.tablefixed_trade);
            this.tableperiod = new periodDataTable();
            base.Tables.Add(this.tableperiod);
            this.tablefixed_trade_delete = new fixed_trade_deleteDataTable();
            base.Tables.Add(this.tablefixed_trade_delete);
            this.tablecapacity_trade = new capacity_tradeDataTable();
            base.Tables.Add(this.tablecapacity_trade);
            this.tablecapacity_trade_delete = new capacity_trade_deleteDataTable();
            base.Tables.Add(this.tablecapacity_trade_delete);
            this.tableswing_nomination = new swing_nominationDataTable();
            base.Tables.Add(this.tableswing_nomination);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("eurorunner_trades_fixed_trade", new global::System.Data.DataColumn[] {
                        this.tableeurorunner_trades.eurorunner_trades_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablefixed_trade.eurorunner_trades_IdColumn});
            this.tablefixed_trade.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("fixed_trade_period", new global::System.Data.DataColumn[] {
                        this.tablefixed_trade.fixed_trade_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableperiod.fixed_trade_IdColumn});
            this.tableperiod.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("eurorunner_trades_fixed_trade_delete", new global::System.Data.DataColumn[] {
                        this.tableeurorunner_trades.eurorunner_trades_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablefixed_trade_delete.eurorunner_trades_IdColumn});
            this.tablefixed_trade_delete.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("eurorunner_trades_capacity_trade", new global::System.Data.DataColumn[] {
                        this.tableeurorunner_trades.eurorunner_trades_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecapacity_trade.eurorunner_trades_IdColumn});
            this.tablecapacity_trade.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("eurorunner_trades_capacity_trade_delete", new global::System.Data.DataColumn[] {
                        this.tableeurorunner_trades.eurorunner_trades_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecapacity_trade_delete.eurorunner_trades_IdColumn});
            this.tablecapacity_trade_delete.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("eurorunner_trades_swing_nomination", new global::System.Data.DataColumn[] {
                        this.tableeurorunner_trades.eurorunner_trades_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableswing_nomination.eurorunner_trades_IdColumn});
            this.tableswing_nomination.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationeurorunner_trades_fixed_trade = new global::System.Data.DataRelation("eurorunner_trades_fixed_trade", new global::System.Data.DataColumn[] {
                        this.tableeurorunner_trades.eurorunner_trades_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablefixed_trade.eurorunner_trades_IdColumn}, false);
            this.relationeurorunner_trades_fixed_trade.Nested = true;
            this.Relations.Add(this.relationeurorunner_trades_fixed_trade);
            this.relationfixed_trade_period = new global::System.Data.DataRelation("fixed_trade_period", new global::System.Data.DataColumn[] {
                        this.tablefixed_trade.fixed_trade_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableperiod.fixed_trade_IdColumn}, false);
            this.relationfixed_trade_period.Nested = true;
            this.Relations.Add(this.relationfixed_trade_period);
            this.relationeurorunner_trades_fixed_trade_delete = new global::System.Data.DataRelation("eurorunner_trades_fixed_trade_delete", new global::System.Data.DataColumn[] {
                        this.tableeurorunner_trades.eurorunner_trades_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablefixed_trade_delete.eurorunner_trades_IdColumn}, false);
            this.relationeurorunner_trades_fixed_trade_delete.Nested = true;
            this.Relations.Add(this.relationeurorunner_trades_fixed_trade_delete);
            this.relationeurorunner_trades_capacity_trade = new global::System.Data.DataRelation("eurorunner_trades_capacity_trade", new global::System.Data.DataColumn[] {
                        this.tableeurorunner_trades.eurorunner_trades_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecapacity_trade.eurorunner_trades_IdColumn}, false);
            this.relationeurorunner_trades_capacity_trade.Nested = true;
            this.Relations.Add(this.relationeurorunner_trades_capacity_trade);
            this.relationeurorunner_trades_capacity_trade_delete = new global::System.Data.DataRelation("eurorunner_trades_capacity_trade_delete", new global::System.Data.DataColumn[] {
                        this.tableeurorunner_trades.eurorunner_trades_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecapacity_trade_delete.eurorunner_trades_IdColumn}, false);
            this.relationeurorunner_trades_capacity_trade_delete.Nested = true;
            this.Relations.Add(this.relationeurorunner_trades_capacity_trade_delete);
            this.relationeurorunner_trades_swing_nomination = new global::System.Data.DataRelation("eurorunner_trades_swing_nomination", new global::System.Data.DataColumn[] {
                        this.tableeurorunner_trades.eurorunner_trades_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableswing_nomination.eurorunner_trades_IdColumn}, false);
            this.relationeurorunner_trades_swing_nomination.Nested = true;
            this.Relations.Add(this.relationeurorunner_trades_swing_nomination);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeeurorunner_trades() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializefixed_trade() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeperiod() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializefixed_trade_delete() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecapacity_trade() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecapacity_trade_delete() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeswing_nomination() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void eurorunner_tradesRowChangeEventHandler(object sender, eurorunner_tradesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void fixed_tradeRowChangeEventHandler(object sender, fixed_tradeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void periodRowChangeEventHandler(object sender, periodRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void fixed_trade_deleteRowChangeEventHandler(object sender, fixed_trade_deleteRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void capacity_tradeRowChangeEventHandler(object sender, capacity_tradeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void capacity_trade_deleteRowChangeEventHandler(object sender, capacity_trade_deleteRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void swing_nominationRowChangeEventHandler(object sender, swing_nominationRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class eurorunner_tradesDataTable : global::System.Data.TypedTableBase<eurorunner_tradesRow> {
            
            private global::System.Data.DataColumn columneurorunner_trades_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public eurorunner_tradesDataTable() {
                this.TableName = "eurorunner_trades";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal eurorunner_tradesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected eurorunner_tradesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn eurorunner_trades_IdColumn {
                get {
                    return this.columneurorunner_trades_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public eurorunner_tradesRow this[int index] {
                get {
                    return ((eurorunner_tradesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event eurorunner_tradesRowChangeEventHandler eurorunner_tradesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event eurorunner_tradesRowChangeEventHandler eurorunner_tradesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event eurorunner_tradesRowChangeEventHandler eurorunner_tradesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event eurorunner_tradesRowChangeEventHandler eurorunner_tradesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addeurorunner_tradesRow(eurorunner_tradesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public eurorunner_tradesRow Addeurorunner_tradesRow() {
                eurorunner_tradesRow roweurorunner_tradesRow = ((eurorunner_tradesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null};
                roweurorunner_tradesRow.ItemArray = columnValuesArray;
                this.Rows.Add(roweurorunner_tradesRow);
                return roweurorunner_tradesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                eurorunner_tradesDataTable cln = ((eurorunner_tradesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new eurorunner_tradesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columneurorunner_trades_Id = base.Columns["eurorunner_trades_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columneurorunner_trades_Id = new global::System.Data.DataColumn("eurorunner_trades_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columneurorunner_trades_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columneurorunner_trades_Id}, true));
                this.columneurorunner_trades_Id.AutoIncrement = true;
                this.columneurorunner_trades_Id.AllowDBNull = false;
                this.columneurorunner_trades_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public eurorunner_tradesRow Neweurorunner_tradesRow() {
                return ((eurorunner_tradesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new eurorunner_tradesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(eurorunner_tradesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.eurorunner_tradesRowChanged != null)) {
                    this.eurorunner_tradesRowChanged(this, new eurorunner_tradesRowChangeEvent(((eurorunner_tradesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.eurorunner_tradesRowChanging != null)) {
                    this.eurorunner_tradesRowChanging(this, new eurorunner_tradesRowChangeEvent(((eurorunner_tradesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.eurorunner_tradesRowDeleted != null)) {
                    this.eurorunner_tradesRowDeleted(this, new eurorunner_tradesRowChangeEvent(((eurorunner_tradesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.eurorunner_tradesRowDeleting != null)) {
                    this.eurorunner_tradesRowDeleting(this, new eurorunner_tradesRowChangeEvent(((eurorunner_tradesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeeurorunner_tradesRow(eurorunner_tradesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "eurorunner_tradesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class fixed_tradeDataTable : global::System.Data.TypedTableBase<fixed_tradeRow> {
            
            private global::System.Data.DataColumn columnbuy_sell;
            
            private global::System.Data.DataColumn columnamount_type;
            
            private global::System.Data.DataColumn columnunit;
            
            private global::System.Data.DataColumn columntemperature;
            
            private global::System.Data.DataColumn columntime_zone;
            
            private global::System.Data.DataColumn columncontract;
            
            private global::System.Data.DataColumn columntrader;
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columnprice;
            
            private global::System.Data.DataColumn columnfixed_trade_Id;
            
            private global::System.Data.DataColumn columneurorunner_trades_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fixed_tradeDataTable() {
                this.TableName = "fixed_trade";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fixed_tradeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected fixed_tradeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn buy_sellColumn {
                get {
                    return this.columnbuy_sell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amount_typeColumn {
                get {
                    return this.columnamount_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn unitColumn {
                get {
                    return this.columnunit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn temperatureColumn {
                get {
                    return this.columntemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn time_zoneColumn {
                get {
                    return this.columntime_zone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn contractColumn {
                get {
                    return this.columncontract;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn traderColumn {
                get {
                    return this.columntrader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fixed_trade_IdColumn {
                get {
                    return this.columnfixed_trade_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn eurorunner_trades_IdColumn {
                get {
                    return this.columneurorunner_trades_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fixed_tradeRow this[int index] {
                get {
                    return ((fixed_tradeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fixed_tradeRowChangeEventHandler fixed_tradeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fixed_tradeRowChangeEventHandler fixed_tradeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fixed_tradeRowChangeEventHandler fixed_tradeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fixed_tradeRowChangeEventHandler fixed_tradeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addfixed_tradeRow(fixed_tradeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fixed_tradeRow Addfixed_tradeRow(string buy_sell, string amount_type, string unit, string temperature, string time_zone, string contract, string trader, string code, decimal price, eurorunner_tradesRow parenteurorunner_tradesRowByeurorunner_trades_fixed_trade) {
                fixed_tradeRow rowfixed_tradeRow = ((fixed_tradeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        buy_sell,
                        amount_type,
                        unit,
                        temperature,
                        time_zone,
                        contract,
                        trader,
                        code,
                        price,
                        null,
                        null};
                if ((parenteurorunner_tradesRowByeurorunner_trades_fixed_trade != null)) {
                    columnValuesArray[10] = parenteurorunner_tradesRowByeurorunner_trades_fixed_trade[0];
                }
                rowfixed_tradeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfixed_tradeRow);
                return rowfixed_tradeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                fixed_tradeDataTable cln = ((fixed_tradeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new fixed_tradeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnbuy_sell = base.Columns["buy_sell"];
                this.columnamount_type = base.Columns["amount_type"];
                this.columnunit = base.Columns["unit"];
                this.columntemperature = base.Columns["temperature"];
                this.columntime_zone = base.Columns["time_zone"];
                this.columncontract = base.Columns["contract"];
                this.columntrader = base.Columns["trader"];
                this.columncode = base.Columns["code"];
                this.columnprice = base.Columns["price"];
                this.columnfixed_trade_Id = base.Columns["fixed_trade_Id"];
                this.columneurorunner_trades_Id = base.Columns["eurorunner_trades_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnbuy_sell = new global::System.Data.DataColumn("buy_sell", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnbuy_sell);
                this.columnamount_type = new global::System.Data.DataColumn("amount_type", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnamount_type);
                this.columnunit = new global::System.Data.DataColumn("unit", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnunit);
                this.columntemperature = new global::System.Data.DataColumn("temperature", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columntemperature);
                this.columntime_zone = new global::System.Data.DataColumn("time_zone", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columntime_zone);
                this.columncontract = new global::System.Data.DataColumn("contract", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncontract);
                this.columntrader = new global::System.Data.DataColumn("trader", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columntrader);
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncode);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(decimal), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnprice);
                this.columnfixed_trade_Id = new global::System.Data.DataColumn("fixed_trade_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnfixed_trade_Id);
                this.columneurorunner_trades_Id = new global::System.Data.DataColumn("eurorunner_trades_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columneurorunner_trades_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnfixed_trade_Id}, true));
                this.columnbuy_sell.AllowDBNull = false;
                this.columnbuy_sell.Namespace = "";
                this.columnamount_type.AllowDBNull = false;
                this.columnamount_type.Namespace = "";
                this.columnunit.AllowDBNull = false;
                this.columnunit.Namespace = "";
                this.columnunit.MaxLength = 6;
                this.columntemperature.AllowDBNull = false;
                this.columntemperature.Namespace = "";
                this.columntemperature.MaxLength = 6;
                this.columntime_zone.AllowDBNull = false;
                this.columntime_zone.Namespace = "";
                this.columntime_zone.MaxLength = 50;
                this.columncontract.AllowDBNull = false;
                this.columncontract.Namespace = "";
                this.columncontract.MaxLength = 50;
                this.columntrader.Namespace = "";
                this.columntrader.MaxLength = 50;
                this.columncode.Namespace = "";
                this.columncode.MaxLength = 20;
                this.columnprice.Namespace = "";
                this.columnfixed_trade_Id.AutoIncrement = true;
                this.columnfixed_trade_Id.AllowDBNull = false;
                this.columnfixed_trade_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fixed_tradeRow Newfixed_tradeRow() {
                return ((fixed_tradeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new fixed_tradeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(fixed_tradeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.fixed_tradeRowChanged != null)) {
                    this.fixed_tradeRowChanged(this, new fixed_tradeRowChangeEvent(((fixed_tradeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.fixed_tradeRowChanging != null)) {
                    this.fixed_tradeRowChanging(this, new fixed_tradeRowChangeEvent(((fixed_tradeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.fixed_tradeRowDeleted != null)) {
                    this.fixed_tradeRowDeleted(this, new fixed_tradeRowChangeEvent(((fixed_tradeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.fixed_tradeRowDeleting != null)) {
                    this.fixed_tradeRowDeleting(this, new fixed_tradeRowChangeEvent(((fixed_tradeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removefixed_tradeRow(fixed_tradeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "fixed_tradeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class periodDataTable : global::System.Data.TypedTableBase<periodRow> {
            
            private global::System.Data.DataColumn columnflange;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnstart_dts;
            
            private global::System.Data.DataColumn columnend_dts;
            
            private global::System.Data.DataColumn columnnetwork;
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columnfixed_trade_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public periodDataTable() {
                this.TableName = "period";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal periodDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected periodDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn flangeColumn {
                get {
                    return this.columnflange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn start_dtsColumn {
                get {
                    return this.columnstart_dts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn end_dtsColumn {
                get {
                    return this.columnend_dts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn networkColumn {
                get {
                    return this.columnnetwork;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fixed_trade_IdColumn {
                get {
                    return this.columnfixed_trade_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public periodRow this[int index] {
                get {
                    return ((periodRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event periodRowChangeEventHandler periodRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event periodRowChangeEventHandler periodRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event periodRowChangeEventHandler periodRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event periodRowChangeEventHandler periodRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddperiodRow(periodRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public periodRow AddperiodRow(string flange, decimal amount, System.DateTime start_dts, System.DateTime end_dts, string network, string code, fixed_tradeRow parentfixed_tradeRowByfixed_trade_period) {
                periodRow rowperiodRow = ((periodRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        flange,
                        amount,
                        start_dts,
                        end_dts,
                        network,
                        code,
                        null};
                if ((parentfixed_tradeRowByfixed_trade_period != null)) {
                    columnValuesArray[6] = parentfixed_tradeRowByfixed_trade_period[9];
                }
                rowperiodRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowperiodRow);
                return rowperiodRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                periodDataTable cln = ((periodDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new periodDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnflange = base.Columns["flange"];
                this.columnamount = base.Columns["amount"];
                this.columnstart_dts = base.Columns["start_dts"];
                this.columnend_dts = base.Columns["end_dts"];
                this.columnnetwork = base.Columns["network"];
                this.columncode = base.Columns["code"];
                this.columnfixed_trade_Id = base.Columns["fixed_trade_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnflange = new global::System.Data.DataColumn("flange", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnflange);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(decimal), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnamount);
                this.columnstart_dts = new global::System.Data.DataColumn("start_dts", typeof(global::System.DateTime), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnstart_dts);
                this.columnend_dts = new global::System.Data.DataColumn("end_dts", typeof(global::System.DateTime), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnend_dts);
                this.columnnetwork = new global::System.Data.DataColumn("network", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnnetwork);
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncode);
                this.columnfixed_trade_Id = new global::System.Data.DataColumn("fixed_trade_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnfixed_trade_Id);
                this.columnflange.AllowDBNull = false;
                this.columnflange.Namespace = "";
                this.columnflange.MaxLength = 50;
                this.columnamount.AllowDBNull = false;
                this.columnamount.Namespace = "";
                this.columnstart_dts.AllowDBNull = false;
                this.columnstart_dts.Namespace = "";
                this.columnend_dts.AllowDBNull = false;
                this.columnend_dts.Namespace = "";
                this.columnnetwork.Namespace = "";
                this.columnnetwork.MaxLength = 50;
                this.columncode.Namespace = "";
                this.columncode.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public periodRow NewperiodRow() {
                return ((periodRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new periodRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(periodRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.periodRowChanged != null)) {
                    this.periodRowChanged(this, new periodRowChangeEvent(((periodRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.periodRowChanging != null)) {
                    this.periodRowChanging(this, new periodRowChangeEvent(((periodRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.periodRowDeleted != null)) {
                    this.periodRowDeleted(this, new periodRowChangeEvent(((periodRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.periodRowDeleting != null)) {
                    this.periodRowDeleting(this, new periodRowChangeEvent(((periodRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveperiodRow(periodRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "periodDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class fixed_trade_deleteDataTable : global::System.Data.TypedTableBase<fixed_trade_deleteRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columneurorunner_trades_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fixed_trade_deleteDataTable() {
                this.TableName = "fixed_trade_delete";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fixed_trade_deleteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected fixed_trade_deleteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn eurorunner_trades_IdColumn {
                get {
                    return this.columneurorunner_trades_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fixed_trade_deleteRow this[int index] {
                get {
                    return ((fixed_trade_deleteRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fixed_trade_deleteRowChangeEventHandler fixed_trade_deleteRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fixed_trade_deleteRowChangeEventHandler fixed_trade_deleteRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fixed_trade_deleteRowChangeEventHandler fixed_trade_deleteRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fixed_trade_deleteRowChangeEventHandler fixed_trade_deleteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addfixed_trade_deleteRow(fixed_trade_deleteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fixed_trade_deleteRow Addfixed_trade_deleteRow(string code, eurorunner_tradesRow parenteurorunner_tradesRowByeurorunner_trades_fixed_trade_delete) {
                fixed_trade_deleteRow rowfixed_trade_deleteRow = ((fixed_trade_deleteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        null};
                if ((parenteurorunner_tradesRowByeurorunner_trades_fixed_trade_delete != null)) {
                    columnValuesArray[1] = parenteurorunner_tradesRowByeurorunner_trades_fixed_trade_delete[0];
                }
                rowfixed_trade_deleteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfixed_trade_deleteRow);
                return rowfixed_trade_deleteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                fixed_trade_deleteDataTable cln = ((fixed_trade_deleteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new fixed_trade_deleteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columneurorunner_trades_Id = base.Columns["eurorunner_trades_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncode);
                this.columneurorunner_trades_Id = new global::System.Data.DataColumn("eurorunner_trades_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columneurorunner_trades_Id);
                this.columncode.AllowDBNull = false;
                this.columncode.Namespace = "";
                this.columncode.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fixed_trade_deleteRow Newfixed_trade_deleteRow() {
                return ((fixed_trade_deleteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new fixed_trade_deleteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(fixed_trade_deleteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.fixed_trade_deleteRowChanged != null)) {
                    this.fixed_trade_deleteRowChanged(this, new fixed_trade_deleteRowChangeEvent(((fixed_trade_deleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.fixed_trade_deleteRowChanging != null)) {
                    this.fixed_trade_deleteRowChanging(this, new fixed_trade_deleteRowChangeEvent(((fixed_trade_deleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.fixed_trade_deleteRowDeleted != null)) {
                    this.fixed_trade_deleteRowDeleted(this, new fixed_trade_deleteRowChangeEvent(((fixed_trade_deleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.fixed_trade_deleteRowDeleting != null)) {
                    this.fixed_trade_deleteRowDeleting(this, new fixed_trade_deleteRowChangeEvent(((fixed_trade_deleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removefixed_trade_deleteRow(fixed_trade_deleteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "fixed_trade_deleteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class capacity_tradeDataTable : global::System.Data.TypedTableBase<capacity_tradeRow> {
            
            private global::System.Data.DataColumn columnbuy_sell;
            
            private global::System.Data.DataColumn columnamount_type;
            
            private global::System.Data.DataColumn columnunit;
            
            private global::System.Data.DataColumn columntemperature;
            
            private global::System.Data.DataColumn columntime_zone;
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columnprice;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnstart_dts;
            
            private global::System.Data.DataColumn columnend_dts;
            
            private global::System.Data.DataColumn columnnetwork;
            
            private global::System.Data.DataColumn columnshipper;
            
            private global::System.Data.DataColumn columnbook_name;
            
            private global::System.Data.DataColumn columntrader;
            
            private global::System.Data.DataColumn columnlocation_type;
            
            private global::System.Data.DataColumn columnlocation;
            
            private global::System.Data.DataColumn columncategory;
            
            private global::System.Data.DataColumn columndirection;
            
            private global::System.Data.DataColumn columnfirmness;
            
            private global::System.Data.DataColumn columncomment;
            
            private global::System.Data.DataColumn columneurorunner_trades_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public capacity_tradeDataTable() {
                this.TableName = "capacity_trade";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal capacity_tradeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected capacity_tradeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn buy_sellColumn {
                get {
                    return this.columnbuy_sell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amount_typeColumn {
                get {
                    return this.columnamount_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn unitColumn {
                get {
                    return this.columnunit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn temperatureColumn {
                get {
                    return this.columntemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn time_zoneColumn {
                get {
                    return this.columntime_zone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn start_dtsColumn {
                get {
                    return this.columnstart_dts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn end_dtsColumn {
                get {
                    return this.columnend_dts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn networkColumn {
                get {
                    return this.columnnetwork;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn shipperColumn {
                get {
                    return this.columnshipper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn book_nameColumn {
                get {
                    return this.columnbook_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn traderColumn {
                get {
                    return this.columntrader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn location_typeColumn {
                get {
                    return this.columnlocation_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn locationColumn {
                get {
                    return this.columnlocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn categoryColumn {
                get {
                    return this.columncategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn directionColumn {
                get {
                    return this.columndirection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn firmnessColumn {
                get {
                    return this.columnfirmness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn commentColumn {
                get {
                    return this.columncomment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn eurorunner_trades_IdColumn {
                get {
                    return this.columneurorunner_trades_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public capacity_tradeRow this[int index] {
                get {
                    return ((capacity_tradeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event capacity_tradeRowChangeEventHandler capacity_tradeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event capacity_tradeRowChangeEventHandler capacity_tradeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event capacity_tradeRowChangeEventHandler capacity_tradeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event capacity_tradeRowChangeEventHandler capacity_tradeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addcapacity_tradeRow(capacity_tradeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public capacity_tradeRow Addcapacity_tradeRow(
                        string buy_sell, 
                        string amount_type, 
                        string unit, 
                        string temperature, 
                        string time_zone, 
                        string code, 
                        decimal price, 
                        decimal amount, 
                        System.DateTime start_dts, 
                        System.DateTime end_dts, 
                        string network, 
                        string shipper, 
                        string book_name, 
                        string trader, 
                        string location_type, 
                        string location, 
                        string category, 
                        string direction, 
                        string firmness, 
                        string comment, 
                        eurorunner_tradesRow parenteurorunner_tradesRowByeurorunner_trades_capacity_trade) {
                capacity_tradeRow rowcapacity_tradeRow = ((capacity_tradeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        buy_sell,
                        amount_type,
                        unit,
                        temperature,
                        time_zone,
                        code,
                        price,
                        amount,
                        start_dts,
                        end_dts,
                        network,
                        shipper,
                        book_name,
                        trader,
                        location_type,
                        location,
                        category,
                        direction,
                        firmness,
                        comment,
                        null};
                if ((parenteurorunner_tradesRowByeurorunner_trades_capacity_trade != null)) {
                    columnValuesArray[20] = parenteurorunner_tradesRowByeurorunner_trades_capacity_trade[0];
                }
                rowcapacity_tradeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcapacity_tradeRow);
                return rowcapacity_tradeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                capacity_tradeDataTable cln = ((capacity_tradeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new capacity_tradeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnbuy_sell = base.Columns["buy_sell"];
                this.columnamount_type = base.Columns["amount_type"];
                this.columnunit = base.Columns["unit"];
                this.columntemperature = base.Columns["temperature"];
                this.columntime_zone = base.Columns["time_zone"];
                this.columncode = base.Columns["code"];
                this.columnprice = base.Columns["price"];
                this.columnamount = base.Columns["amount"];
                this.columnstart_dts = base.Columns["start_dts"];
                this.columnend_dts = base.Columns["end_dts"];
                this.columnnetwork = base.Columns["network"];
                this.columnshipper = base.Columns["shipper"];
                this.columnbook_name = base.Columns["book_name"];
                this.columntrader = base.Columns["trader"];
                this.columnlocation_type = base.Columns["location_type"];
                this.columnlocation = base.Columns["location"];
                this.columncategory = base.Columns["category"];
                this.columndirection = base.Columns["direction"];
                this.columnfirmness = base.Columns["firmness"];
                this.columncomment = base.Columns["comment"];
                this.columneurorunner_trades_Id = base.Columns["eurorunner_trades_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnbuy_sell = new global::System.Data.DataColumn("buy_sell", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnbuy_sell);
                this.columnamount_type = new global::System.Data.DataColumn("amount_type", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnamount_type);
                this.columnunit = new global::System.Data.DataColumn("unit", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnunit);
                this.columntemperature = new global::System.Data.DataColumn("temperature", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columntemperature);
                this.columntime_zone = new global::System.Data.DataColumn("time_zone", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columntime_zone);
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncode);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(decimal), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnprice);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(decimal), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnamount);
                this.columnstart_dts = new global::System.Data.DataColumn("start_dts", typeof(global::System.DateTime), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnstart_dts);
                this.columnend_dts = new global::System.Data.DataColumn("end_dts", typeof(global::System.DateTime), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnend_dts);
                this.columnnetwork = new global::System.Data.DataColumn("network", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnnetwork);
                this.columnshipper = new global::System.Data.DataColumn("shipper", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnshipper);
                this.columnbook_name = new global::System.Data.DataColumn("book_name", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnbook_name);
                this.columntrader = new global::System.Data.DataColumn("trader", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columntrader);
                this.columnlocation_type = new global::System.Data.DataColumn("location_type", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnlocation_type);
                this.columnlocation = new global::System.Data.DataColumn("location", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnlocation);
                this.columncategory = new global::System.Data.DataColumn("category", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncategory);
                this.columndirection = new global::System.Data.DataColumn("direction", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columndirection);
                this.columnfirmness = new global::System.Data.DataColumn("firmness", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnfirmness);
                this.columncomment = new global::System.Data.DataColumn("comment", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncomment);
                this.columneurorunner_trades_Id = new global::System.Data.DataColumn("eurorunner_trades_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columneurorunner_trades_Id);
                this.columnbuy_sell.AllowDBNull = false;
                this.columnbuy_sell.Namespace = "";
                this.columnamount_type.AllowDBNull = false;
                this.columnamount_type.Namespace = "";
                this.columnunit.AllowDBNull = false;
                this.columnunit.Namespace = "";
                this.columnunit.MaxLength = 6;
                this.columntemperature.AllowDBNull = false;
                this.columntemperature.Namespace = "";
                this.columntemperature.MaxLength = 6;
                this.columntime_zone.AllowDBNull = false;
                this.columntime_zone.Namespace = "";
                this.columntime_zone.MaxLength = 50;
                this.columncode.Namespace = "";
                this.columncode.MaxLength = 20;
                this.columnprice.Namespace = "";
                this.columnamount.AllowDBNull = false;
                this.columnamount.Namespace = "";
                this.columnstart_dts.AllowDBNull = false;
                this.columnstart_dts.Namespace = "";
                this.columnend_dts.AllowDBNull = false;
                this.columnend_dts.Namespace = "";
                this.columnnetwork.AllowDBNull = false;
                this.columnnetwork.Namespace = "";
                this.columnnetwork.MaxLength = 50;
                this.columnshipper.Namespace = "";
                this.columnshipper.MaxLength = 50;
                this.columnbook_name.Namespace = "";
                this.columnbook_name.MaxLength = 50;
                this.columntrader.Namespace = "";
                this.columntrader.MaxLength = 50;
                this.columnlocation_type.Namespace = "";
                this.columnlocation_type.DefaultValue = ((string)("F"));
                this.columnlocation.AllowDBNull = false;
                this.columnlocation.Namespace = "";
                this.columnlocation.MaxLength = 50;
                this.columncategory.Namespace = "";
                this.columncategory.DefaultValue = ((string)("T"));
                this.columndirection.Namespace = "";
                this.columnfirmness.Namespace = "";
                this.columnfirmness.DefaultValue = ((string)("F"));
                this.columncomment.Namespace = "";
                this.columncomment.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public capacity_tradeRow Newcapacity_tradeRow() {
                return ((capacity_tradeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new capacity_tradeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(capacity_tradeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.capacity_tradeRowChanged != null)) {
                    this.capacity_tradeRowChanged(this, new capacity_tradeRowChangeEvent(((capacity_tradeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.capacity_tradeRowChanging != null)) {
                    this.capacity_tradeRowChanging(this, new capacity_tradeRowChangeEvent(((capacity_tradeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.capacity_tradeRowDeleted != null)) {
                    this.capacity_tradeRowDeleted(this, new capacity_tradeRowChangeEvent(((capacity_tradeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.capacity_tradeRowDeleting != null)) {
                    this.capacity_tradeRowDeleting(this, new capacity_tradeRowChangeEvent(((capacity_tradeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removecapacity_tradeRow(capacity_tradeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "capacity_tradeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class capacity_trade_deleteDataTable : global::System.Data.TypedTableBase<capacity_trade_deleteRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columneurorunner_trades_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public capacity_trade_deleteDataTable() {
                this.TableName = "capacity_trade_delete";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal capacity_trade_deleteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected capacity_trade_deleteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn eurorunner_trades_IdColumn {
                get {
                    return this.columneurorunner_trades_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public capacity_trade_deleteRow this[int index] {
                get {
                    return ((capacity_trade_deleteRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event capacity_trade_deleteRowChangeEventHandler capacity_trade_deleteRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event capacity_trade_deleteRowChangeEventHandler capacity_trade_deleteRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event capacity_trade_deleteRowChangeEventHandler capacity_trade_deleteRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event capacity_trade_deleteRowChangeEventHandler capacity_trade_deleteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addcapacity_trade_deleteRow(capacity_trade_deleteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public capacity_trade_deleteRow Addcapacity_trade_deleteRow(string code, eurorunner_tradesRow parenteurorunner_tradesRowByeurorunner_trades_capacity_trade_delete) {
                capacity_trade_deleteRow rowcapacity_trade_deleteRow = ((capacity_trade_deleteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        null};
                if ((parenteurorunner_tradesRowByeurorunner_trades_capacity_trade_delete != null)) {
                    columnValuesArray[1] = parenteurorunner_tradesRowByeurorunner_trades_capacity_trade_delete[0];
                }
                rowcapacity_trade_deleteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcapacity_trade_deleteRow);
                return rowcapacity_trade_deleteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                capacity_trade_deleteDataTable cln = ((capacity_trade_deleteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new capacity_trade_deleteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columneurorunner_trades_Id = base.Columns["eurorunner_trades_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncode);
                this.columneurorunner_trades_Id = new global::System.Data.DataColumn("eurorunner_trades_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columneurorunner_trades_Id);
                this.columncode.AllowDBNull = false;
                this.columncode.Namespace = "";
                this.columncode.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public capacity_trade_deleteRow Newcapacity_trade_deleteRow() {
                return ((capacity_trade_deleteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new capacity_trade_deleteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(capacity_trade_deleteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.capacity_trade_deleteRowChanged != null)) {
                    this.capacity_trade_deleteRowChanged(this, new capacity_trade_deleteRowChangeEvent(((capacity_trade_deleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.capacity_trade_deleteRowChanging != null)) {
                    this.capacity_trade_deleteRowChanging(this, new capacity_trade_deleteRowChangeEvent(((capacity_trade_deleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.capacity_trade_deleteRowDeleted != null)) {
                    this.capacity_trade_deleteRowDeleted(this, new capacity_trade_deleteRowChangeEvent(((capacity_trade_deleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.capacity_trade_deleteRowDeleting != null)) {
                    this.capacity_trade_deleteRowDeleting(this, new capacity_trade_deleteRowChangeEvent(((capacity_trade_deleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removecapacity_trade_deleteRow(capacity_trade_deleteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "capacity_trade_deleteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class swing_nominationDataTable : global::System.Data.TypedTableBase<swing_nominationRow> {
            
            private global::System.Data.DataColumn columnbuy_sell;
            
            private global::System.Data.DataColumn columnamount_type;
            
            private global::System.Data.DataColumn columnunit;
            
            private global::System.Data.DataColumn columntemperature;
            
            private global::System.Data.DataColumn columntime_zone;
            
            private global::System.Data.DataColumn columncontract;
            
            private global::System.Data.DataColumn columnflange;
            
            private global::System.Data.DataColumn columncapacity_type;
            
            private global::System.Data.DataColumn columnstart_dts;
            
            private global::System.Data.DataColumn columnend_dts;
            
            private global::System.Data.DataColumn columnbdr;
            
            private global::System.Data.DataColumn columnbro;
            
            private global::System.Data.DataColumn columnnetwork;
            
            private global::System.Data.DataColumn columneurorunner_trades_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public swing_nominationDataTable() {
                this.TableName = "swing_nomination";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal swing_nominationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected swing_nominationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn buy_sellColumn {
                get {
                    return this.columnbuy_sell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amount_typeColumn {
                get {
                    return this.columnamount_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn unitColumn {
                get {
                    return this.columnunit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn temperatureColumn {
                get {
                    return this.columntemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn time_zoneColumn {
                get {
                    return this.columntime_zone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn contractColumn {
                get {
                    return this.columncontract;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn flangeColumn {
                get {
                    return this.columnflange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn capacity_typeColumn {
                get {
                    return this.columncapacity_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn start_dtsColumn {
                get {
                    return this.columnstart_dts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn end_dtsColumn {
                get {
                    return this.columnend_dts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bdrColumn {
                get {
                    return this.columnbdr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn broColumn {
                get {
                    return this.columnbro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn networkColumn {
                get {
                    return this.columnnetwork;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn eurorunner_trades_IdColumn {
                get {
                    return this.columneurorunner_trades_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public swing_nominationRow this[int index] {
                get {
                    return ((swing_nominationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event swing_nominationRowChangeEventHandler swing_nominationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event swing_nominationRowChangeEventHandler swing_nominationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event swing_nominationRowChangeEventHandler swing_nominationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event swing_nominationRowChangeEventHandler swing_nominationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addswing_nominationRow(swing_nominationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public swing_nominationRow Addswing_nominationRow(string buy_sell, string amount_type, string unit, string temperature, string time_zone, string contract, string flange, string capacity_type, System.DateTime start_dts, System.DateTime end_dts, decimal bdr, decimal bro, string network, eurorunner_tradesRow parenteurorunner_tradesRowByeurorunner_trades_swing_nomination) {
                swing_nominationRow rowswing_nominationRow = ((swing_nominationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        buy_sell,
                        amount_type,
                        unit,
                        temperature,
                        time_zone,
                        contract,
                        flange,
                        capacity_type,
                        start_dts,
                        end_dts,
                        bdr,
                        bro,
                        network,
                        null};
                if ((parenteurorunner_tradesRowByeurorunner_trades_swing_nomination != null)) {
                    columnValuesArray[13] = parenteurorunner_tradesRowByeurorunner_trades_swing_nomination[0];
                }
                rowswing_nominationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowswing_nominationRow);
                return rowswing_nominationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                swing_nominationDataTable cln = ((swing_nominationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new swing_nominationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnbuy_sell = base.Columns["buy_sell"];
                this.columnamount_type = base.Columns["amount_type"];
                this.columnunit = base.Columns["unit"];
                this.columntemperature = base.Columns["temperature"];
                this.columntime_zone = base.Columns["time_zone"];
                this.columncontract = base.Columns["contract"];
                this.columnflange = base.Columns["flange"];
                this.columncapacity_type = base.Columns["capacity_type"];
                this.columnstart_dts = base.Columns["start_dts"];
                this.columnend_dts = base.Columns["end_dts"];
                this.columnbdr = base.Columns["bdr"];
                this.columnbro = base.Columns["bro"];
                this.columnnetwork = base.Columns["network"];
                this.columneurorunner_trades_Id = base.Columns["eurorunner_trades_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnbuy_sell = new global::System.Data.DataColumn("buy_sell", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnbuy_sell);
                this.columnamount_type = new global::System.Data.DataColumn("amount_type", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnamount_type);
                this.columnunit = new global::System.Data.DataColumn("unit", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnunit);
                this.columntemperature = new global::System.Data.DataColumn("temperature", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columntemperature);
                this.columntime_zone = new global::System.Data.DataColumn("time_zone", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columntime_zone);
                this.columncontract = new global::System.Data.DataColumn("contract", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncontract);
                this.columnflange = new global::System.Data.DataColumn("flange", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnflange);
                this.columncapacity_type = new global::System.Data.DataColumn("capacity_type", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncapacity_type);
                this.columnstart_dts = new global::System.Data.DataColumn("start_dts", typeof(global::System.DateTime), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnstart_dts);
                this.columnend_dts = new global::System.Data.DataColumn("end_dts", typeof(global::System.DateTime), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnend_dts);
                this.columnbdr = new global::System.Data.DataColumn("bdr", typeof(decimal), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnbdr);
                this.columnbro = new global::System.Data.DataColumn("bro", typeof(decimal), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnbro);
                this.columnnetwork = new global::System.Data.DataColumn("network", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnnetwork);
                this.columneurorunner_trades_Id = new global::System.Data.DataColumn("eurorunner_trades_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columneurorunner_trades_Id);
                this.columnbuy_sell.AllowDBNull = false;
                this.columnbuy_sell.Namespace = "";
                this.columnamount_type.AllowDBNull = false;
                this.columnamount_type.Namespace = "";
                this.columnunit.AllowDBNull = false;
                this.columnunit.Namespace = "";
                this.columnunit.MaxLength = 6;
                this.columntemperature.AllowDBNull = false;
                this.columntemperature.Namespace = "";
                this.columntemperature.MaxLength = 6;
                this.columntime_zone.AllowDBNull = false;
                this.columntime_zone.Namespace = "";
                this.columntime_zone.MaxLength = 50;
                this.columncontract.AllowDBNull = false;
                this.columncontract.Namespace = "";
                this.columncontract.MaxLength = 50;
                this.columnflange.AllowDBNull = false;
                this.columnflange.Namespace = "";
                this.columnflange.MaxLength = 50;
                this.columncapacity_type.Namespace = "";
                this.columncapacity_type.MaxLength = 50;
                this.columnstart_dts.AllowDBNull = false;
                this.columnstart_dts.Namespace = "";
                this.columnend_dts.AllowDBNull = false;
                this.columnend_dts.Namespace = "";
                this.columnbdr.Namespace = "";
                this.columnbro.Namespace = "";
                this.columnnetwork.Namespace = "";
                this.columnnetwork.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public swing_nominationRow Newswing_nominationRow() {
                return ((swing_nominationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new swing_nominationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(swing_nominationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.swing_nominationRowChanged != null)) {
                    this.swing_nominationRowChanged(this, new swing_nominationRowChangeEvent(((swing_nominationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.swing_nominationRowChanging != null)) {
                    this.swing_nominationRowChanging(this, new swing_nominationRowChangeEvent(((swing_nominationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.swing_nominationRowDeleted != null)) {
                    this.swing_nominationRowDeleted(this, new swing_nominationRowChangeEvent(((swing_nominationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.swing_nominationRowDeleting != null)) {
                    this.swing_nominationRowDeleting(this, new swing_nominationRowChangeEvent(((swing_nominationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeswing_nominationRow(swing_nominationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "swing_nominationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class eurorunner_tradesRow : global::System.Data.DataRow {
            
            private eurorunner_tradesDataTable tableeurorunner_trades;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal eurorunner_tradesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableeurorunner_trades = ((eurorunner_tradesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int eurorunner_trades_Id {
                get {
                    return ((int)(this[this.tableeurorunner_trades.eurorunner_trades_IdColumn]));
                }
                set {
                    this[this.tableeurorunner_trades.eurorunner_trades_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fixed_tradeRow[] Getfixed_tradeRows() {
                if ((this.Table.ChildRelations["eurorunner_trades_fixed_trade"] == null)) {
                    return new fixed_tradeRow[0];
                }
                else {
                    return ((fixed_tradeRow[])(base.GetChildRows(this.Table.ChildRelations["eurorunner_trades_fixed_trade"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fixed_trade_deleteRow[] Getfixed_trade_deleteRows() {
                if ((this.Table.ChildRelations["eurorunner_trades_fixed_trade_delete"] == null)) {
                    return new fixed_trade_deleteRow[0];
                }
                else {
                    return ((fixed_trade_deleteRow[])(base.GetChildRows(this.Table.ChildRelations["eurorunner_trades_fixed_trade_delete"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public capacity_tradeRow[] Getcapacity_tradeRows() {
                if ((this.Table.ChildRelations["eurorunner_trades_capacity_trade"] == null)) {
                    return new capacity_tradeRow[0];
                }
                else {
                    return ((capacity_tradeRow[])(base.GetChildRows(this.Table.ChildRelations["eurorunner_trades_capacity_trade"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public capacity_trade_deleteRow[] Getcapacity_trade_deleteRows() {
                if ((this.Table.ChildRelations["eurorunner_trades_capacity_trade_delete"] == null)) {
                    return new capacity_trade_deleteRow[0];
                }
                else {
                    return ((capacity_trade_deleteRow[])(base.GetChildRows(this.Table.ChildRelations["eurorunner_trades_capacity_trade_delete"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public swing_nominationRow[] Getswing_nominationRows() {
                if ((this.Table.ChildRelations["eurorunner_trades_swing_nomination"] == null)) {
                    return new swing_nominationRow[0];
                }
                else {
                    return ((swing_nominationRow[])(base.GetChildRows(this.Table.ChildRelations["eurorunner_trades_swing_nomination"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class fixed_tradeRow : global::System.Data.DataRow {
            
            private fixed_tradeDataTable tablefixed_trade;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fixed_tradeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefixed_trade = ((fixed_tradeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string buy_sell {
                get {
                    return ((string)(this[this.tablefixed_trade.buy_sellColumn]));
                }
                set {
                    this[this.tablefixed_trade.buy_sellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string amount_type {
                get {
                    return ((string)(this[this.tablefixed_trade.amount_typeColumn]));
                }
                set {
                    this[this.tablefixed_trade.amount_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string unit {
                get {
                    return ((string)(this[this.tablefixed_trade.unitColumn]));
                }
                set {
                    this[this.tablefixed_trade.unitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string temperature {
                get {
                    return ((string)(this[this.tablefixed_trade.temperatureColumn]));
                }
                set {
                    this[this.tablefixed_trade.temperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string time_zone {
                get {
                    return ((string)(this[this.tablefixed_trade.time_zoneColumn]));
                }
                set {
                    this[this.tablefixed_trade.time_zoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string contract {
                get {
                    return ((string)(this[this.tablefixed_trade.contractColumn]));
                }
                set {
                    this[this.tablefixed_trade.contractColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string trader {
                get {
                    try {
                        return ((string)(this[this.tablefixed_trade.traderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trader\' in table \'fixed_trade\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefixed_trade.traderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string code {
                get {
                    try {
                        return ((string)(this[this.tablefixed_trade.codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'code\' in table \'fixed_trade\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefixed_trade.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal price {
                get {
                    try {
                        return ((decimal)(this[this.tablefixed_trade.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price\' in table \'fixed_trade\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefixed_trade.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fixed_trade_Id {
                get {
                    return ((int)(this[this.tablefixed_trade.fixed_trade_IdColumn]));
                }
                set {
                    this[this.tablefixed_trade.fixed_trade_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int eurorunner_trades_Id {
                get {
                    try {
                        return ((int)(this[this.tablefixed_trade.eurorunner_trades_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eurorunner_trades_Id\' in table \'fixed_trade\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefixed_trade.eurorunner_trades_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public eurorunner_tradesRow eurorunner_tradesRow {
                get {
                    return ((eurorunner_tradesRow)(this.GetParentRow(this.Table.ParentRelations["eurorunner_trades_fixed_trade"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["eurorunner_trades_fixed_trade"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstraderNull() {
                return this.IsNull(this.tablefixed_trade.traderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettraderNull() {
                this[this.tablefixed_trade.traderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscodeNull() {
                return this.IsNull(this.tablefixed_trade.codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcodeNull() {
                this[this.tablefixed_trade.codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspriceNull() {
                return this.IsNull(this.tablefixed_trade.priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpriceNull() {
                this[this.tablefixed_trade.priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iseurorunner_trades_IdNull() {
                return this.IsNull(this.tablefixed_trade.eurorunner_trades_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Seteurorunner_trades_IdNull() {
                this[this.tablefixed_trade.eurorunner_trades_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public periodRow[] GetperiodRows() {
                if ((this.Table.ChildRelations["fixed_trade_period"] == null)) {
                    return new periodRow[0];
                }
                else {
                    return ((periodRow[])(base.GetChildRows(this.Table.ChildRelations["fixed_trade_period"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class periodRow : global::System.Data.DataRow {
            
            private periodDataTable tableperiod;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal periodRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableperiod = ((periodDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string flange {
                get {
                    return ((string)(this[this.tableperiod.flangeColumn]));
                }
                set {
                    this[this.tableperiod.flangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal amount {
                get {
                    return ((decimal)(this[this.tableperiod.amountColumn]));
                }
                set {
                    this[this.tableperiod.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime start_dts {
                get {
                    return ((global::System.DateTime)(this[this.tableperiod.start_dtsColumn]));
                }
                set {
                    this[this.tableperiod.start_dtsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime end_dts {
                get {
                    return ((global::System.DateTime)(this[this.tableperiod.end_dtsColumn]));
                }
                set {
                    this[this.tableperiod.end_dtsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string network {
                get {
                    try {
                        return ((string)(this[this.tableperiod.networkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'network\' in table \'period\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableperiod.networkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string code {
                get {
                    try {
                        return ((string)(this[this.tableperiod.codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'code\' in table \'period\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableperiod.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fixed_trade_Id {
                get {
                    try {
                        return ((int)(this[this.tableperiod.fixed_trade_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fixed_trade_Id\' in table \'period\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableperiod.fixed_trade_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fixed_tradeRow fixed_tradeRow {
                get {
                    return ((fixed_tradeRow)(this.GetParentRow(this.Table.ParentRelations["fixed_trade_period"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fixed_trade_period"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnetworkNull() {
                return this.IsNull(this.tableperiod.networkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnetworkNull() {
                this[this.tableperiod.networkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscodeNull() {
                return this.IsNull(this.tableperiod.codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcodeNull() {
                this[this.tableperiod.codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isfixed_trade_IdNull() {
                return this.IsNull(this.tableperiod.fixed_trade_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setfixed_trade_IdNull() {
                this[this.tableperiod.fixed_trade_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class fixed_trade_deleteRow : global::System.Data.DataRow {
            
            private fixed_trade_deleteDataTable tablefixed_trade_delete;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fixed_trade_deleteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefixed_trade_delete = ((fixed_trade_deleteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string code {
                get {
                    return ((string)(this[this.tablefixed_trade_delete.codeColumn]));
                }
                set {
                    this[this.tablefixed_trade_delete.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int eurorunner_trades_Id {
                get {
                    try {
                        return ((int)(this[this.tablefixed_trade_delete.eurorunner_trades_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eurorunner_trades_Id\' in table \'fixed_trade_delete\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablefixed_trade_delete.eurorunner_trades_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public eurorunner_tradesRow eurorunner_tradesRow {
                get {
                    return ((eurorunner_tradesRow)(this.GetParentRow(this.Table.ParentRelations["eurorunner_trades_fixed_trade_delete"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["eurorunner_trades_fixed_trade_delete"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iseurorunner_trades_IdNull() {
                return this.IsNull(this.tablefixed_trade_delete.eurorunner_trades_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Seteurorunner_trades_IdNull() {
                this[this.tablefixed_trade_delete.eurorunner_trades_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class capacity_tradeRow : global::System.Data.DataRow {
            
            private capacity_tradeDataTable tablecapacity_trade;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal capacity_tradeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecapacity_trade = ((capacity_tradeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string buy_sell {
                get {
                    return ((string)(this[this.tablecapacity_trade.buy_sellColumn]));
                }
                set {
                    this[this.tablecapacity_trade.buy_sellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string amount_type {
                get {
                    return ((string)(this[this.tablecapacity_trade.amount_typeColumn]));
                }
                set {
                    this[this.tablecapacity_trade.amount_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string unit {
                get {
                    return ((string)(this[this.tablecapacity_trade.unitColumn]));
                }
                set {
                    this[this.tablecapacity_trade.unitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string temperature {
                get {
                    return ((string)(this[this.tablecapacity_trade.temperatureColumn]));
                }
                set {
                    this[this.tablecapacity_trade.temperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string time_zone {
                get {
                    return ((string)(this[this.tablecapacity_trade.time_zoneColumn]));
                }
                set {
                    this[this.tablecapacity_trade.time_zoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string code {
                get {
                    try {
                        return ((string)(this[this.tablecapacity_trade.codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'code\' in table \'capacity_trade\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecapacity_trade.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal price {
                get {
                    try {
                        return ((decimal)(this[this.tablecapacity_trade.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price\' in table \'capacity_trade\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecapacity_trade.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal amount {
                get {
                    return ((decimal)(this[this.tablecapacity_trade.amountColumn]));
                }
                set {
                    this[this.tablecapacity_trade.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime start_dts {
                get {
                    return ((global::System.DateTime)(this[this.tablecapacity_trade.start_dtsColumn]));
                }
                set {
                    this[this.tablecapacity_trade.start_dtsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime end_dts {
                get {
                    return ((global::System.DateTime)(this[this.tablecapacity_trade.end_dtsColumn]));
                }
                set {
                    this[this.tablecapacity_trade.end_dtsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string network {
                get {
                    return ((string)(this[this.tablecapacity_trade.networkColumn]));
                }
                set {
                    this[this.tablecapacity_trade.networkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string shipper {
                get {
                    try {
                        return ((string)(this[this.tablecapacity_trade.shipperColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shipper\' in table \'capacity_trade\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecapacity_trade.shipperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string book_name {
                get {
                    try {
                        return ((string)(this[this.tablecapacity_trade.book_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'book_name\' in table \'capacity_trade\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecapacity_trade.book_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string trader {
                get {
                    try {
                        return ((string)(this[this.tablecapacity_trade.traderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trader\' in table \'capacity_trade\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecapacity_trade.traderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string location_type {
                get {
                    try {
                        return ((string)(this[this.tablecapacity_trade.location_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'location_type\' in table \'capacity_trade\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecapacity_trade.location_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string location {
                get {
                    return ((string)(this[this.tablecapacity_trade.locationColumn]));
                }
                set {
                    this[this.tablecapacity_trade.locationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string category {
                get {
                    try {
                        return ((string)(this[this.tablecapacity_trade.categoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'category\' in table \'capacity_trade\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecapacity_trade.categoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string direction {
                get {
                    try {
                        return ((string)(this[this.tablecapacity_trade.directionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direction\' in table \'capacity_trade\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecapacity_trade.directionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string firmness {
                get {
                    try {
                        return ((string)(this[this.tablecapacity_trade.firmnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'firmness\' in table \'capacity_trade\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecapacity_trade.firmnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string comment {
                get {
                    try {
                        return ((string)(this[this.tablecapacity_trade.commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'comment\' in table \'capacity_trade\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecapacity_trade.commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int eurorunner_trades_Id {
                get {
                    try {
                        return ((int)(this[this.tablecapacity_trade.eurorunner_trades_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eurorunner_trades_Id\' in table \'capacity_trade\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecapacity_trade.eurorunner_trades_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public eurorunner_tradesRow eurorunner_tradesRow {
                get {
                    return ((eurorunner_tradesRow)(this.GetParentRow(this.Table.ParentRelations["eurorunner_trades_capacity_trade"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["eurorunner_trades_capacity_trade"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscodeNull() {
                return this.IsNull(this.tablecapacity_trade.codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcodeNull() {
                this[this.tablecapacity_trade.codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspriceNull() {
                return this.IsNull(this.tablecapacity_trade.priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpriceNull() {
                this[this.tablecapacity_trade.priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsshipperNull() {
                return this.IsNull(this.tablecapacity_trade.shipperColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetshipperNull() {
                this[this.tablecapacity_trade.shipperColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbook_nameNull() {
                return this.IsNull(this.tablecapacity_trade.book_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbook_nameNull() {
                this[this.tablecapacity_trade.book_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstraderNull() {
                return this.IsNull(this.tablecapacity_trade.traderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettraderNull() {
                this[this.tablecapacity_trade.traderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Islocation_typeNull() {
                return this.IsNull(this.tablecapacity_trade.location_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setlocation_typeNull() {
                this[this.tablecapacity_trade.location_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscategoryNull() {
                return this.IsNull(this.tablecapacity_trade.categoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcategoryNull() {
                this[this.tablecapacity_trade.categoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdirectionNull() {
                return this.IsNull(this.tablecapacity_trade.directionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdirectionNull() {
                this[this.tablecapacity_trade.directionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfirmnessNull() {
                return this.IsNull(this.tablecapacity_trade.firmnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfirmnessNull() {
                this[this.tablecapacity_trade.firmnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscommentNull() {
                return this.IsNull(this.tablecapacity_trade.commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcommentNull() {
                this[this.tablecapacity_trade.commentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iseurorunner_trades_IdNull() {
                return this.IsNull(this.tablecapacity_trade.eurorunner_trades_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Seteurorunner_trades_IdNull() {
                this[this.tablecapacity_trade.eurorunner_trades_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class capacity_trade_deleteRow : global::System.Data.DataRow {
            
            private capacity_trade_deleteDataTable tablecapacity_trade_delete;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal capacity_trade_deleteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecapacity_trade_delete = ((capacity_trade_deleteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string code {
                get {
                    return ((string)(this[this.tablecapacity_trade_delete.codeColumn]));
                }
                set {
                    this[this.tablecapacity_trade_delete.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int eurorunner_trades_Id {
                get {
                    try {
                        return ((int)(this[this.tablecapacity_trade_delete.eurorunner_trades_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eurorunner_trades_Id\' in table \'capacity_trade_delete\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablecapacity_trade_delete.eurorunner_trades_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public eurorunner_tradesRow eurorunner_tradesRow {
                get {
                    return ((eurorunner_tradesRow)(this.GetParentRow(this.Table.ParentRelations["eurorunner_trades_capacity_trade_delete"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["eurorunner_trades_capacity_trade_delete"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iseurorunner_trades_IdNull() {
                return this.IsNull(this.tablecapacity_trade_delete.eurorunner_trades_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Seteurorunner_trades_IdNull() {
                this[this.tablecapacity_trade_delete.eurorunner_trades_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class swing_nominationRow : global::System.Data.DataRow {
            
            private swing_nominationDataTable tableswing_nomination;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal swing_nominationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableswing_nomination = ((swing_nominationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string buy_sell {
                get {
                    return ((string)(this[this.tableswing_nomination.buy_sellColumn]));
                }
                set {
                    this[this.tableswing_nomination.buy_sellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string amount_type {
                get {
                    return ((string)(this[this.tableswing_nomination.amount_typeColumn]));
                }
                set {
                    this[this.tableswing_nomination.amount_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string unit {
                get {
                    return ((string)(this[this.tableswing_nomination.unitColumn]));
                }
                set {
                    this[this.tableswing_nomination.unitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string temperature {
                get {
                    return ((string)(this[this.tableswing_nomination.temperatureColumn]));
                }
                set {
                    this[this.tableswing_nomination.temperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string time_zone {
                get {
                    return ((string)(this[this.tableswing_nomination.time_zoneColumn]));
                }
                set {
                    this[this.tableswing_nomination.time_zoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string contract {
                get {
                    return ((string)(this[this.tableswing_nomination.contractColumn]));
                }
                set {
                    this[this.tableswing_nomination.contractColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string flange {
                get {
                    return ((string)(this[this.tableswing_nomination.flangeColumn]));
                }
                set {
                    this[this.tableswing_nomination.flangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string capacity_type {
                get {
                    try {
                        return ((string)(this[this.tableswing_nomination.capacity_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'capacity_type\' in table \'swing_nomination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableswing_nomination.capacity_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime start_dts {
                get {
                    return ((global::System.DateTime)(this[this.tableswing_nomination.start_dtsColumn]));
                }
                set {
                    this[this.tableswing_nomination.start_dtsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime end_dts {
                get {
                    return ((global::System.DateTime)(this[this.tableswing_nomination.end_dtsColumn]));
                }
                set {
                    this[this.tableswing_nomination.end_dtsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal bdr {
                get {
                    try {
                        return ((decimal)(this[this.tableswing_nomination.bdrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bdr\' in table \'swing_nomination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableswing_nomination.bdrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal bro {
                get {
                    try {
                        return ((decimal)(this[this.tableswing_nomination.broColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bro\' in table \'swing_nomination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableswing_nomination.broColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string network {
                get {
                    try {
                        return ((string)(this[this.tableswing_nomination.networkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'network\' in table \'swing_nomination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableswing_nomination.networkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int eurorunner_trades_Id {
                get {
                    try {
                        return ((int)(this[this.tableswing_nomination.eurorunner_trades_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eurorunner_trades_Id\' in table \'swing_nomination\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableswing_nomination.eurorunner_trades_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public eurorunner_tradesRow eurorunner_tradesRow {
                get {
                    return ((eurorunner_tradesRow)(this.GetParentRow(this.Table.ParentRelations["eurorunner_trades_swing_nomination"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["eurorunner_trades_swing_nomination"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscapacity_typeNull() {
                return this.IsNull(this.tableswing_nomination.capacity_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcapacity_typeNull() {
                this[this.tableswing_nomination.capacity_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbdrNull() {
                return this.IsNull(this.tableswing_nomination.bdrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbdrNull() {
                this[this.tableswing_nomination.bdrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbroNull() {
                return this.IsNull(this.tableswing_nomination.broColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbroNull() {
                this[this.tableswing_nomination.broColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnetworkNull() {
                return this.IsNull(this.tableswing_nomination.networkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnetworkNull() {
                this[this.tableswing_nomination.networkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iseurorunner_trades_IdNull() {
                return this.IsNull(this.tableswing_nomination.eurorunner_trades_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Seteurorunner_trades_IdNull() {
                this[this.tableswing_nomination.eurorunner_trades_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class eurorunner_tradesRowChangeEvent : global::System.EventArgs {
            
            private eurorunner_tradesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public eurorunner_tradesRowChangeEvent(eurorunner_tradesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public eurorunner_tradesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class fixed_tradeRowChangeEvent : global::System.EventArgs {
            
            private fixed_tradeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fixed_tradeRowChangeEvent(fixed_tradeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fixed_tradeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class periodRowChangeEvent : global::System.EventArgs {
            
            private periodRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public periodRowChangeEvent(periodRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public periodRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class fixed_trade_deleteRowChangeEvent : global::System.EventArgs {
            
            private fixed_trade_deleteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fixed_trade_deleteRowChangeEvent(fixed_trade_deleteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fixed_trade_deleteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class capacity_tradeRowChangeEvent : global::System.EventArgs {
            
            private capacity_tradeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public capacity_tradeRowChangeEvent(capacity_tradeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public capacity_tradeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class capacity_trade_deleteRowChangeEvent : global::System.EventArgs {
            
            private capacity_trade_deleteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public capacity_trade_deleteRowChangeEvent(capacity_trade_deleteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public capacity_trade_deleteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class swing_nominationRowChangeEvent : global::System.EventArgs {
            
            private swing_nominationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public swing_nominationRowChangeEvent(swing_nominationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public swing_nominationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
